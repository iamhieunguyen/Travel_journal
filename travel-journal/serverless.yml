service: travel-journal
frameworkVersion: '4'

provider:
  name: aws
  runtime: python3.11
  region: us-east-1
  environment:
    USERS_TABLE: Users
    JOURNAL_TABLE: Journal
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:PutItem
            - dynamodb:GetItem
            - dynamodb:Scan
          Resource: "*"

plugins:
  - serverless-wsgi
  - serverless-python-requirements

custom:
  wsgi:
    app: app.app  # Flask app náº±m trong file app.py
    packRequirements: false

functions:
  api:
    handler: wsgi_handler.handler
    events:
      - http:
          path: /
          method: ANY
      - http:
          path: /{proxy+}
          method: ANY

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.USERS_TABLE}
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    JournalTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.JOURNAL_TABLE}
        AttributeDefinitions:
          - AttributeName: entryId
            AttributeType: S
        KeySchema:
          - AttributeName: entryId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
